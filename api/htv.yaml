swagger: '2.0'
info:
  version: '1.2.x'
  title: UTFapp API
  description: Api do UTFapp usada por todas as suas interfaces.
  termsOfService: http://www.utfapp.com/termos/
  contact:
    name: UTFapp team
    email: contato@utfapp.com
    url: http://utfapp.com
  license:
    name: Proprietary
    url: http://utfapp.com
host: dev.utfapp.com
basePath: /ws
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /cardapio:
    get:
      description: Retorna informações do cardápio de acordo com os parâmetros
      produces:
        - application/json
      parameters:
        - name: campus
          in: header
          description: id do campus (usa Curitiba se não informado)
          required: false
          type: integer
          format: int32
        - name: from
          in: header
          description: data de inicio (3 dias atras se nao informado)
          required: false
          type: integer
          format: int32
        - name: to
          in: header
          description: data de termino (daqui 7 dias se nao informado)
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: pet response
          schema:
            type: array
            items:
              $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      produces:
        - application/json
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/newPet'
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: findPetById
      produces:
        - application/json
        - application/xml
        - text/xml
        - text/html
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: pet response
          schema:
            $ref: '#/definitions/pet'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: pet deleted
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/errorModel'
definitions:
  pet:
    required:
      - id
      - name
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      tag:
        type: string
      campus:
        type: integer
        format: int32
      from:
        type: integer
        format: int32
      to:
        type: integer
        format: int32
  newPet:
      required:
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
  errorModel:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
